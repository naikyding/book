(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{497:function(e,a,t){"use strict";t.r(a);var s=t(4),r=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"啟動-container"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#啟動-container"}},[e._v("#")]),e._v(" 啟動 "),t("code",[e._v("container")])]),e._v(" "),t("p",[e._v("容器啟動有兩種方式：")]),e._v(" "),t("ul",[t("li",[e._v("一種是基於 "),t("code",[e._v("image")]),e._v(" 新建一個容器並啟動")]),e._v(" "),t("li",[e._v("一個是將終止狀態的容器啟動。")])]),e._v(" "),t("h3",{attrs:{id:"新建並啟動-docker-run"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新建並啟動-docker-run"}},[e._v("#")]),e._v(" 新建並啟動 "),t("code",[e._v("docker run")])]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("docker run hello-world\n")])])]),t("p",[e._v("指定運行")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("docker run ubuntu:18.04 /bin/echo "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Hello world'")]),e._v("\nHello world\n")])])]),t("div",{staticClass:"custom-block tip"},[t("p",[e._v("当利用 "),t("code",[e._v("docker run")]),e._v(" 来創建容器时，Docker 在后台运行的标准操作包括：")]),e._v(" "),t("ul",[t("li",[e._v("检查本地是否存在指定的镜像，不存在就从 "),t("code",[e._v("dockerHub")]),e._v(" 下载")]),e._v(" "),t("li",[e._v("利用镜像创建并启动一个容器")]),e._v(" "),t("li",[e._v("分配一个文件系统，并在只读的镜像层外面挂载一层可读写层")]),e._v(" "),t("li",[e._v("从宿主主机配置的网桥接口中桥接一个虚拟接口到容器中去")]),e._v(" "),t("li",[e._v("从地址池配置一个 ip 地址给容器")]),e._v(" "),t("li",[e._v("执行用户指定的应用程序")]),e._v(" "),t("li",[e._v("执行完毕后容器被终止")])])]),e._v(" "),t("h3",{attrs:{id:"啟動已終止的容器-docker-container-start"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#啟動已終止的容器-docker-container-start"}},[e._v("#")]),e._v(" 啟動已終止的容器 "),t("code",[e._v("docker container start")])]),e._v(" "),t("h3",{attrs:{id:"進入容器-docker-exec"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#進入容器-docker-exec"}},[e._v("#")]),e._v(" 進入容器 "),t("code",[e._v("docker exec")])]),e._v(" "),t("p",[e._v("是 Docker 內建的命令。下面示範如何使用該命令")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[e._v("docker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exec")]),e._v(" -it vuecli4 /bin/bash/\n\ndocker "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exec")]),e._v(" -it vuecli4 "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("bash")]),e._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 也行")]),e._v("\n")])])]),t("p",[e._v("進入 "),t("code",[e._v("vuecli4")]),e._v("容器 (正在運行的容器)，使用 "),t("code",[e._v("bash")]),e._v(" 命令操作")]),e._v(" "),t("h3",{attrs:{id:"退出容器-exit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#退出容器-exit"}},[e._v("#")]),e._v(" 退出容器 "),t("code",[e._v("exit")])])])}),[],!1,null,null,null);a.default=r.exports}}]);